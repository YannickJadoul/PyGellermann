name: Packaging

on:
  push:
    branches:
      - main
      - stable
      - docs
      - actions*
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    name: Build wheel and sdist
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build
        run: |
          python -m build

      - name: Upload built packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist/*
          if-no-files-found: error

  pyinstaller:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    name: PyInstaller â€¢ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      - name: Run PyInstaller
        run: |
          pyinstaller --name PyGellermann --windowed --onefile scripts/pygellermann-gui.py

      - name: Package macOS App Bundle to DMG
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
          curl -O https://github.com/dmgbuild/dmgbuild/raw/main/src/dmgbuild/resources/builtin-arrow.tiff
          create-dmg \
            --volname "PyGellermann" \
            --background "builtin-arrow.tiff" \
            --window-size 640 280 \
            --icon-size 128 \
            --icon "PyGellermann.app" 140 120 \
            --hide-extension "PyGellermann.app" \
            --app-drop-link 500 120 \
            "dist/PyGellermann.dmg" \
            "dist/PyGellermann.app/"

      - name: Upload built executable
        uses: actions/upload-artifact@v3
        with:
          name: executables
          path: dist/PyGellermann${{ runner.os == 'macOS' && '.dmg' || runner.os == 'Windows' && '.exe' || '' }}
          if-no-files-found: error

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
    needs: [build, pyinstaller]

    steps:
      - name: Collect wheel and sdist
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist

      - name: Collect executables
        uses: actions/download-artifact@v3
        with:
          name: executables
          path: dist

      - name: Upload wheel, sdist, and executables to release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          draft: true
          artifacts: dist/*
          token: ${{ secrets.GITHUB_TOKEN }}
